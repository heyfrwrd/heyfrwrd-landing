---
import HeadHrefLangs from "@/components/HeadHrefLangs.astro";
import Header from "@/components/Header.astro";
import "@/styles/global.css";
import SpeedInsights from "@vercel/speed-insights/astro";

// Basic configuration
const currentLocale = Astro.currentLocale || "en";
const SITE_URL = import.meta.env.SITE
  ? import.meta.env.SITE.trim()
  : "http://localhost:4321";
const path = Astro.url.pathname;

// Helper functions
// Safe string concatenation for URLs
function createUrl(base: string, path: string): string {
  try {
    const cleanBase = base.endsWith("/") ? base.slice(0, -1) : base;
    const cleanPath = path.startsWith("/") ? path : `/${path}`;
    return `${cleanBase}${cleanPath}`;
  } catch (error) {
    console.error("Error creating URL:", error);
    // Fallback to simple concatenation
    return base + (path.startsWith("/") ? path : `/${path}`);
  }
}
// Basic URLs
const canonicalUrl = createUrl(SITE_URL, path);
const ogImageUrl = createUrl(SITE_URL, "/og.webp");
const faviconUrl = createUrl(SITE_URL, "/favicon.svg");

// Default text values for SEO
const siteTitle = "heyfrwrd.me";
const siteDescription =
  "Automate your social media DMs with AI that responds just like you.";

// Pre-compute IDs for JSON-LD
const organizationId = createUrl(SITE_URL, "#organization");
const websiteId = createUrl(SITE_URL, "#website");
// Create the JSON-LD structure safely without using i18next
const jsonLdObj = {
  "@context": "https://schema.org",
  "@graph": [
    {
      "@type": "Organization",
      "@id": organizationId,
      name: siteTitle,
      url: SITE_URL,
      logo: {
        "@type": "ImageObject",
        url: faviconUrl,
        width: "512",
        height: "512",
      },
      description: siteDescription,
      sameAs: [
        "https://twitter.com/heyfrwrdme",
        "https://instagram.com/heyfrwrdme",
      ],
    },
    {
      "@type": "WebSite",
      "@id": websiteId,
      url: SITE_URL,
      name: siteTitle,
      description: siteDescription,
      publisher: {
        "@id": organizationId,
      },
      inLanguage: currentLocale,
    },
    {
      "@type": "WebPage",
      "@id": canonicalUrl,
      url: canonicalUrl,
      name: siteTitle,
      isPartOf: {
        "@id": websiteId,
      },
      about: {
        "@id": organizationId,
      },
      description: siteDescription,
      inLanguage: currentLocale,
    },
  ],
};

// Stringify the JSON-LD once
const jsonLdString = JSON.stringify(jsonLdObj);
---

<html lang={currentLocale}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="robots" content="index, follow" />

    <!-- Canonical -->
    <link rel="canonical" href={canonicalUrl} />

    <!-- Alternates -->
    <HeadHrefLangs />

    <title>{siteTitle}</title>
    <meta name="description" content={siteDescription} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={siteDescription} />
    <meta property="og:image" content={ogImageUrl} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta
      property="og:locale"
      content={currentLocale === "es" ? "es_ES" : "en_US"}
    />
    <meta property="og:site_name" content="heyfrwrd.me" />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@heyfrwrdme" />
    <meta name="twitter:creator" content="@heyfrwrdme" />
    <meta name="twitter:url" content={canonicalUrl} />
    <meta name="twitter:title" content={siteTitle} />
    <meta name="twitter:description" content={siteDescription} />
    <meta name="twitter:image" content={ogImageUrl} />

    <!-- Self-hosted Outfit font -->
    <link
      rel="preload"
      href="/fonts/Outfit-VariableFont_wght.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link rel="stylesheet" href="/fonts/outfit.css" />

    <!-- Schema.org JSON-LD -->
    <script type="application/ld+json" set:html={jsonLdString} />
  </head>
  <body class="max-h-screen m-0 w-full">
    <Header />
    <slot />
    <SpeedInsights />
    <script>
      // Client-side script to update content with translations after i18next is initialized
      document.addEventListener("DOMContentLoaded", function () {
        if (window.i18next && window.i18next.isInitialized) {
          try {
            const siteTitle = window.i18next.t("site.title") || "heyfrwrd.me";
            const siteDescription =
              window.i18next.t("site.description") ||
              "Automate your social media DMs with AI that responds just like you.";

            // Update page title
            document.title = siteTitle;

            // Update meta tags
            document
              .querySelector('meta[name="description"]')
              .setAttribute("content", siteDescription);
            document
              .querySelector('meta[property="og:title"]')
              .setAttribute("content", siteTitle);
            document
              .querySelector('meta[property="og:description"]')
              .setAttribute("content", siteDescription);
            document
              .querySelector('meta[name="twitter:title"]')
              .setAttribute("content", siteTitle);
            document
              .querySelector('meta[name="twitter:description"]')
              .setAttribute("content", siteDescription);
          } catch (error) {
            console.error("Error updating translations:", error);
          }
        }
      });
    </script>
  </body>
</html>
